@use "sass:map";
@use "../abstracts/layout-config"as layout_config;
@use "../abstracts/breakpoints"as wbx_breakpoints;

.wbx-layout-container {
    $layout-container-gutter-x: 1.5rem;
    --wbx-gutter-x: #{$layout-container-gutter-x};
    --wbx-gutter-y: 0;


    // padding-left: calc(var(--wbx-gutter-x) * 0.5);
    // padding-right: calc(var(--wbx-gutter-x) * 0.5);

    // max-width: layout.$layout-container-max-width;
    margin-left: auto;
    margin-right: auto;
    width: 100%;

    // Breakpoint: sm
    @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "sm")) {
        max-width: layout_config.$breakpoint-container-sm;
    }

    // Breakpoint: md
    @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "md")) {
        max-width: layout_config.$breakpoint-container-md;
    }

    // Breakpoint: lg
    @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "lg")) {
        max-width: layout_config.$breakpoint-container-lg;
    }

    // Breakpoint: xl
    @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "xl")) {
        max-width: layout_config.$breakpoint-container-xl;
    }

    // Breakpoint: xxl

    @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "xxl")) {
        max-width: layout_config.$breakpoint-container-xxl;
    }

    // Breakpoint: ultra-md
    @if layout_config.$is-breakpoint-ultra-md {
        @media (min-width: map.get(wbx_breakpoints.$wbx-breakpoints, "ultra-md")) {
            max-width: layout_config.$breakpoint-container-ultra-md;
        }
    }
}